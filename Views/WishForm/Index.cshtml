@model IEnumerable<WishForm>
<<<<<<< HEAD
@using Microsoft.AspNetCore.Identity
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

@{
    ViewData["Title"] = "Index";
    var currentUser = await UserManager.GetUserAsync(User);
    var isAdmin = User.IsInRole("Admin");
    var userWishForms = isAdmin ? Model : Model.Where(w => w.CreatedBy.Id == currentUser.Id);
}

@if (!SignInManager.IsSignedIn(User))
{
    <script>window.location.href = "/Account/Login";</script>
}
else
{
    <h1>Index</h1>

    @if (isAdmin)
    {
        <p>
            <a asp-action="Create">Create New</a>
        </p>
    }

    <table class="table">
        <thead>
            <tr>
                <th>
                    Destination
                </th>
                <th>
                    Departure Date
                </th>
                <th>
                    Duration
                </th>
                <th>
                    Budget
                </th>
                <th>
                    Interests
                </th>
                <th>
                    Additional Notes
                </th>
                <th>
                    Submission Date
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in userWishForms)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Destination)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.DepartureDate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Duration)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Budget)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Interests)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.AdditionalNotes)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.SubmissionDate)
                    </td>
                    <td>
                        @if (SignInManager.IsSignedIn(User) && isAdmin)
                        {
                            <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> <br />
                            <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                        }
                        @if (SignInManager.IsSignedIn(User) && isAdmin || item.CreatedBy.Id == currentUser.Id)
                        {
                            <a asp-action="Details" asp-route-id="@item.Id">Details</a> <br />
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
=======

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Destination)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.DepartureDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Duration)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Budget)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Interests)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.AdditionalNotes)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.SubmissionDate)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Destination)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.DepartureDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Duration)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Budget)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Interests)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.AdditionalNotes)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.SubmissionDate)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
>>>>>>> origin/HarounTest
