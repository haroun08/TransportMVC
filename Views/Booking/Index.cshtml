@model IEnumerable<Booking>
<<<<<<< HEAD
@using Microsoft.AspNetCore.Identity
@inject SignInManager<User> SignInManager
@inject UserManager<User> UserManager

@{
    ViewData["Title"] = "Index";
    var currentUser = await UserManager.GetUserAsync(User);
    var isAdmin = User.IsInRole("Admin");
    var userBookings = isAdmin ? Model : Model.Where(b => b.CreatedBy.Id == currentUser.Id);
}

<style>
    /* Apply a minimum height of 100vh to ensure the table takes at least the viewport height */
    .table-container {
        min-height: 100vh;
    }
</style>

<div class="table-container">
    <h1>Booking</h1>

    @if (!SignInManager.IsSignedIn(User))
    {
        <p>You need to <a asp-area="" asp-controller="Account" asp-action="Login">sign in</a> to view your bookings.</p>
    }
    else
    {
        @if (isAdmin)
        {
            <p>
                <a asp-action="Create">Create New</a>
            </p>
        }

        <table class="table">
            <thead>
                <tr>
                    <th>
                        Associated Package Name
                    </th>
                    <th>
                        State
                    </th>
                    <th>
                        Number Of Travellers
                    </th>
                    <th>
                        Created At
                    </th>
                    <th>
                        Is Paid
                    </th>
                    <th>
                        Payment Method
                    </th>
                    <th>
                        Last Modified At
                    </th>
                    <th>
                        Total Amount
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in userBookings)
                {
                    <tr>
                        <td>
                            @Html.DisplayFor(modelItem => item.AssociatedPackage.Name)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.State)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.NumberOfTravellers)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.CreatedAt)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.IsPaid)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.PaymentMethod)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.LastModifiedAt)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.TotalAmount)
                        </td>
                        <td>
                            @if (isAdmin)
                            {
                                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> <br />
                                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                            }
                            <a asp-action="Details" asp-route-id="@item.Id">Details</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
</div>
=======

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Create">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.AssociatedPackage.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.State)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.NumberOfTravellers)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreatedAt)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsPaid)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.PaymentMethod)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastModifiedAt)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TotalAmount)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.AssociatedPackage.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.State)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.NumberOfTravellers)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedAt)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsPaid)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.PaymentMethod)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastModifiedAt)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.TotalAmount)
            </td>
            <td>
                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
>>>>>>> origin/HarounTest
